Plugin ID,CVE,CVSS v2.0 Base Score,Risk,Host,Protocol,Port,Name,Synopsis,Description,Solution,See Also,Plugin Output,CVSS v3.0 Base Score,Distribution,State
10114,CVE-1999-0524,0,None,Laptop,icmp,0,ICMP Timestamp Request Remote Date Disclosure,It is possible to determine the exact time set on the remote host.,"The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).",,"The difference between the local and remote clocks is -1 seconds.
",0,Kali Linux,freshly installed
10267,,,None,Laptop,tcp,22,SSH Server Type and Version Information,An SSH server is listening on this port.,"It is possible to obtain information about the remote SSH server by
sending an empty authentication request.",n/a,,"
SSH version : SSH-2.0-OpenSSH_9.4p1 Debian-1
SSH supported authentication : publickey,password
",,Kali Linux,freshly installed
10287,,,None,Laptop,udp,0,Traceroute Information,It was possible to obtain traceroute information.,Makes a traceroute to the remote host.,n/a,,"For your information, here is the traceroute from 10.0.1.11 to 10.0.1.21 : 
10.0.1.11
10.0.1.21

Hop Count: 1
",,Kali Linux,freshly installed
10881,,,None,Laptop,tcp,22,SSH Protocol Versions Supported,A SSH server is running on the remote host.,"This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.",n/a,,"The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
",,Kali Linux,freshly installed
11219,,,None,Laptop,tcp,22,Nessus SYN scanner,It is possible to determine which TCP ports are open.,"This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.",Protect your target with an IP filter.,,Port 22/tcp was found to be open,,Kali Linux,freshly installed
11936,,,None,Laptop,tcp,0,OS Identification,It is possible to guess the remote operating system.,"Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.",n/a,,"
Remote operating system : Linux Kernel 6.5.0-kali3-amd64
Confidence level : 99
Method : uname

 
The remote host is running Linux Kernel 6.5.0-kali3-amd64",,Kali Linux,freshly installed
19506,,,None,Laptop,tcp,0,Nessus Scan Information,This plugin displays information about the Nessus scan.,"This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.",n/a,,"Information about this scan : 

Nessus version : 10.7.1
Nessus build : 20016
Plugin feed version : 202404071510
Scanner edition used : Nessus Home
Scanner OS : LINUX
Scanner distribution : ubuntu1404-x86-64
Scan type : Normal
Scan name : Kali Linux (pre-scan)
Scan policy used : Basic Network Scan
Scanner IP : 10.0.1.11
Port scanner(s) : nessus_syn_scanner 
Port range : default
Ping RTT : 134.346 ms
Thorough tests : no
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : no
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : disabled
Web application tests : disabled
Max hosts : 30
Max checks : 4
Recv timeout : 5
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/4/8 23:35 EDT
Scan duration : 1762 sec
Scan for malware : no
",,Kali Linux,freshly installed
21745,,,None,Laptop,tcp,0,OS Security Patch Assessment Failed,Errors prevented OS Security Patch Assessment.,"OS Security Patch Assessment is not available for this host because
either the credentials supplied in the scan policy did not allow
Nessus to log into it or some other problem occurred.",Fix the problem(s) so that OS Security Patch Assessment is possible.,,"
The following service errors were logged :

  - Plugin      : ssh_get_info.nasl
    Plugin ID   : 12634
    Plugin Name : Authenticated Check : OS Name and Installed Package Enumeration
    Protocol    : SSH
    Message     : 
Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.
",,Kali Linux,freshly installed
22964,,,None,Laptop,tcp,22,Service Detection,The remote service could be identified.,"Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.",n/a,,An SSH server is running on this port.,,Kali Linux,freshly installed
25220,,,None,Laptop,tcp,0,TCP/IP Timestamps Supported,The remote service implements TCP timestamps.,"The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.",n/a,http://www.ietf.org/rfc/rfc1323.txt,,,Kali Linux,freshly installed
35716,,,None,Laptop,tcp,0,Ethernet Card Manufacturer Detection,The manufacturer can be identified from the Ethernet OUI.,"Each ethernet MAC address starts with a 24-bit Organizationally 
Unique Identifier (OUI). These OUIs are registered by IEEE.",n/a,"https://standards.ieee.org/faqs/regauth.html
http://www.nessus.org/u?794673b4","
The following card manufacturers were identified :

F0:76:1C:8C:33:11 : COMPAL INFORMATION (KUNSHAN) CO., LTD.
",,Kali Linux,freshly installed
45590,,,None,Laptop,tcp,0,Common Platform Enumeration (CPE),"It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.",n/a,"http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:openbsd:openssh:9.4 -> OpenBSD OpenSSH
  cpe:/a:openbsd:openssh:9.4p1 -> OpenBSD OpenSSH
",,Kali Linux,freshly installed
54615,,,None,Laptop,tcp,0,Device Type,It is possible to guess the remote device type.,"Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).",n/a,,"Remote device type : general-purpose
Confidence level : 99
",,Kali Linux,freshly installed
66334,,,None,Laptop,tcp,0,Patch Report,The remote host is missing several patches.,"The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.",Install the patches listed below.,,"

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


",,Kali Linux,freshly installed
70657,,,None,Laptop,tcp,22,SSH Algorithms and Languages Supported,An SSH server is listening on this port.,"This script detects which algorithms and languages are supported by
the remote service for encrypting communications.",n/a,,"
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  curve25519-sha256
  curve25519-sha256@libssh.org
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group14-sha256
  diffie-hellman-group16-sha512
  diffie-hellman-group18-sha512
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521
  sntrup761x25519-sha512@openssh.com

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
",,Kali Linux,freshly installed
86420,,,None,Laptop,tcp,0,Ethernet MAC Addresses,"This plugin gathers MAC addresses from various sources and
consolidates them into a list.","This plugin gathers MAC addresses discovered from both remote probing
of the host (e.g. SNMP and Netbios) and from running local checks
(e.g. ifconfig). It then consolidates the MAC addresses into a single,
unique, and uniform list.",n/a,,"The following is a consolidated list of detected MAC addresses:
  - F0:76:1C:8C:33:11
",,Kali Linux,freshly installed
117885,,,None,Laptop,tcp,22,Target Credential Issues by Authentication Protocol - Intermittent Authentication Failure,"Nessus was able to log in to the remote host using the provided
credentials, but there were intermittent authentication failures.","Nessus was able to successfully authenticate to the remote host on an
authentication protocol at least once using credentials provided in
the scan policy.

However, one or more plugins failed to authenticate to the remote host
on the same port and protocol using the same credential set that was
previously successful. This may indicate an intermittent
authentication problem with the remote host, which could be caused by
session rate limits, session concurrency limits, or other issues
preventing consistent authentication success.

These intermittent authentication failures may have affected the
results of some plugins. See plugin output for failure details.",n/a,,"
Nessus was able to successfully log into the remote host as :

User:       'user'
Port:       22
Proto:      SSH
Method:     password


Successful authentication was reported by the following plugin :

  Plugin      : ssh_rate_limiting.nasl
  Plugin ID   : 122501
  Plugin Name : SSH Rate Limited Device

However, one or more subsequent plugins failed to authenticate to the
remote host on the same port and protocol using the same credential
set that previously succeeded. This may indicate an intermittent
authentication problem with the remote host which may have affected
the results of the following plugins.

Error message statistics :

  1 Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.


Failure Details :

  - Plugin      : ssh_get_info.nasl
    Plugin ID   : 12634
    Plugin Name : Authenticated Check : OS Name and Installed Package Enumeration
    Message     : 
Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.
",,Kali Linux,freshly installed
141118,,,None,Laptop,tcp,22,Target Credential Status by Authentication Protocol - Valid Credentials Provided,Valid credentials were provided for an available authentication protocol.,"Nessus was able to determine that valid credentials were provided for
an authentication protocol available on the remote target because it
was able to successfully authenticate directly to the remote target
using that authentication protocol at least once. Authentication was
successful because the authentication protocol service was available
remotely, the service was able to be identified, the authentication
protocol was able to be negotiated successfully, and a set of
credentials provided in the scan policy for that authentication
protocol was accepted by the remote service. See plugin output for
details, including protocol, port, and account.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.",n/a,,"
Nessus was able to log in to the remote host via the following :

User:       'user'
Port:       22
Proto:      SSH
Method:     password
",,Kali Linux,freshly installed
149334,,,None,Laptop,tcp,22,SSH Password Authentication Accepted,The SSH server on the remote host accepts password authentication.,The SSH server on the remote host accepts password authentication.,n/a,https://tools.ietf.org/html/rfc4252#section-8,,,Kali Linux,freshly installed
153588,,,None,Laptop,tcp,22,SSH SHA-1 HMAC Algorithms Enabled,The remote SSH server is configured to enable SHA-1 HMAC algorithms.,"The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.",n/a,,"
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
",,Kali Linux,freshly installed
181418,,,None,Laptop,tcp,22,OpenSSH Detection,An OpenSSH-based SSH server was detected on the remote host.,An OpenSSH-based SSH server was detected on the remote host.,n/a,https://www.openssh.com/,"
  Service : ssh
  Version : 9.4p1
  Banner  : SSH-2.0-OpenSSH_9.4p1 Debian-1
",,Kali Linux,freshly installed
187201,CVE-2023-48795,6.4,Medium,Laptop,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187201,CVE-2023-51384,6.4,Medium,Laptop,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187201,CVE-2023-51385,6.4,Medium,Laptop,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187315,CVE-2023-48795,5.4,Medium,Laptop,tcp,22,SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795),The remote SSH server is vulnerable to a mitm prefix truncation attack.,"The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.",Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.,https://terrapin-attack.com/,"Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
",5.9,Kali Linux,freshly installed
10114,CVE-1999-0524,0,None,Desktop,icmp,0,ICMP Timestamp Request Remote Date Disclosure,It is possible to determine the exact time set on the remote host.,"The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).",,"The difference between the local and remote clocks is -2 seconds.
",0,Kali Linux,freshly installed
10267,,,None,Desktop,tcp,22,SSH Server Type and Version Information,An SSH server is listening on this port.,"It is possible to obtain information about the remote SSH server by
sending an empty authentication request.",n/a,,"
SSH version : SSH-2.0-OpenSSH_9.4p1 Debian-1
SSH supported authentication : publickey,password
",,Kali Linux,freshly installed
10287,,,None,Desktop,udp,0,Traceroute Information,It was possible to obtain traceroute information.,Makes a traceroute to the remote host.,n/a,,"For your information, here is the traceroute from 10.0.1.11 to 10.0.1.22 : 
10.0.1.11
10.0.1.22

Hop Count: 1
",,Kali Linux,freshly installed
10881,,,None,Desktop,tcp,22,SSH Protocol Versions Supported,A SSH server is running on the remote host.,"This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.",n/a,,"The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
",,Kali Linux,freshly installed
11219,,,None,Desktop,tcp,22,Nessus SYN scanner,It is possible to determine which TCP ports are open.,"This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.",Protect your target with an IP filter.,,Port 22/tcp was found to be open,,Kali Linux,freshly installed
11936,,,None,Desktop,tcp,0,OS Identification,It is possible to guess the remote operating system.,"Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.",n/a,,"
Remote operating system : Linux Kernel 6.5.0-kali3-amd64
Confidence level : 99
Method : uname

 
The remote host is running Linux Kernel 6.5.0-kali3-amd64",,Kali Linux,freshly installed
19506,,,None,Desktop,tcp,0,Nessus Scan Information,This plugin displays information about the Nessus scan.,"This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.",n/a,,"Information about this scan : 

Nessus version : 10.7.1
Nessus build : 20016
Plugin feed version : 202404071510
Scanner edition used : Nessus Home
Scanner OS : LINUX
Scanner distribution : ubuntu1404-x86-64
Scan type : Normal
Scan name : Kali Linux (pre-scan)
Scan policy used : Basic Network Scan
Scanner IP : 10.0.1.11
Port scanner(s) : nessus_syn_scanner 
Port range : default
Ping RTT : 131.780 ms
Thorough tests : no
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : no
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : disabled
Web application tests : disabled
Max hosts : 30
Max checks : 4
Recv timeout : 5
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/4/8 23:35 EDT
Scan duration : 585 sec
Scan for malware : no
",,Kali Linux,freshly installed
21745,,,None,Desktop,tcp,0,OS Security Patch Assessment Failed,Errors prevented OS Security Patch Assessment.,"OS Security Patch Assessment is not available for this host because
either the credentials supplied in the scan policy did not allow
Nessus to log into it or some other problem occurred.",Fix the problem(s) so that OS Security Patch Assessment is possible.,,"
The following service errors were logged :

  - Plugin      : ssh_get_info.nasl
    Plugin ID   : 12634
    Plugin Name : Authenticated Check : OS Name and Installed Package Enumeration
    Protocol    : SSH
    Message     : 
Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.
",,Kali Linux,freshly installed
22964,,,None,Desktop,tcp,22,Service Detection,The remote service could be identified.,"Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.",n/a,,An SSH server is running on this port.,,Kali Linux,freshly installed
25220,,,None,Desktop,tcp,0,TCP/IP Timestamps Supported,The remote service implements TCP timestamps.,"The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.",n/a,http://www.ietf.org/rfc/rfc1323.txt,,,Kali Linux,freshly installed
35716,,,None,Desktop,tcp,0,Ethernet Card Manufacturer Detection,The manufacturer can be identified from the Ethernet OUI.,"Each ethernet MAC address starts with a 24-bit Organizationally 
Unique Identifier (OUI). These OUIs are registered by IEEE.",n/a,"https://standards.ieee.org/faqs/regauth.html
http://www.nessus.org/u?794673b4","
The following card manufacturers were identified :

14:DA:E9:71:C4:FA : ASUSTek COMPUTER INC.
",,Kali Linux,freshly installed
45590,,,None,Desktop,tcp,0,Common Platform Enumeration (CPE),"It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.",n/a,"http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:openbsd:openssh:9.4 -> OpenBSD OpenSSH
  cpe:/a:openbsd:openssh:9.4p1 -> OpenBSD OpenSSH
",,Kali Linux,freshly installed
54615,,,None,Desktop,tcp,0,Device Type,It is possible to guess the remote device type.,"Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).",n/a,,"Remote device type : general-purpose
Confidence level : 99
",,Kali Linux,freshly installed
66334,,,None,Desktop,tcp,0,Patch Report,The remote host is missing several patches.,"The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.",Install the patches listed below.,,"

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


",,Kali Linux,freshly installed
70657,,,None,Desktop,tcp,22,SSH Algorithms and Languages Supported,An SSH server is listening on this port.,"This script detects which algorithms and languages are supported by
the remote service for encrypting communications.",n/a,,"
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  curve25519-sha256
  curve25519-sha256@libssh.org
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group14-sha256
  diffie-hellman-group16-sha512
  diffie-hellman-group18-sha512
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521
  sntrup761x25519-sha512@openssh.com

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
",,Kali Linux,freshly installed
86420,,,None,Desktop,tcp,0,Ethernet MAC Addresses,"This plugin gathers MAC addresses from various sources and
consolidates them into a list.","This plugin gathers MAC addresses discovered from both remote probing
of the host (e.g. SNMP and Netbios) and from running local checks
(e.g. ifconfig). It then consolidates the MAC addresses into a single,
unique, and uniform list.",n/a,,"The following is a consolidated list of detected MAC addresses:
  - 14:DA:E9:71:C4:FA
",,Kali Linux,freshly installed
97993,,,None,Desktop,tcp,0,OS Identification and Installed Software Enumeration over SSH v2 (Using New SSH Library),"Information about the remote host can be disclosed via an
authenticated session.","Nessus was able to login to the remote host using SSH or local
commands and extract the list of installed packages.",n/a,,"
It was possible to log into the remote host via SSH using 'password' authentication.

The output of ""uname -a"" is :
Linux kali 6.5.0-kali3-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.5.6-1kali1 (2023-10-09) x86_64 GNU/Linux

Local checks have been enabled for this host.
We are able to run commands on the remote host, but are unable to
currently identify it in this plugin.

Runtime : 176.927173 seconds
",,Kali Linux,freshly installed
117885,,,None,Desktop,tcp,22,Target Credential Issues by Authentication Protocol - Intermittent Authentication Failure,"Nessus was able to log in to the remote host using the provided
credentials, but there were intermittent authentication failures.","Nessus was able to successfully authenticate to the remote host on an
authentication protocol at least once using credentials provided in
the scan policy.

However, one or more plugins failed to authenticate to the remote host
on the same port and protocol using the same credential set that was
previously successful. This may indicate an intermittent
authentication problem with the remote host, which could be caused by
session rate limits, session concurrency limits, or other issues
preventing consistent authentication success.

These intermittent authentication failures may have affected the
results of some plugins. See plugin output for failure details.",n/a,,"
Nessus was able to successfully log into the remote host as :

User:       'user'
Port:       22
Proto:      SSH
Method:     password
Escalation: sudo


Successful authentication was reported by the following plugin :

  Plugin      : ssh_rate_limiting.nasl
  Plugin ID   : 122501
  Plugin Name : SSH Rate Limited Device

However, one or more subsequent plugins failed to authenticate to the
remote host on the same port and protocol using the same credential
set that previously succeeded. This may indicate an intermittent
authentication problem with the remote host which may have affected
the results of the following plugins.

Error message statistics :

  1 Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.


Failure Details :

  - Plugin      : ssh_get_info.nasl
    Plugin ID   : 12634
    Plugin Name : Authenticated Check : OS Name and Installed Package Enumeration
    Message     : 
Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.
",,Kali Linux,freshly installed
117886,,,None,Desktop,tcp,0,OS Security Patch Assessment Not Available,OS Security Patch Assessment is not available.,"OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.",n/a,,"
The following issues were reported :

  - Plugin      : ssh_get_info2.nasl
    Plugin ID   : 97993
    Plugin Name : OS Identification and Installed Software Enumeration over SSH v2 (Using New SSH Library)
    Protocol    : SSH
    Message     : 
We are able to run commands on the remote host, but are unable to
currently identify it in this plugin.
",,Kali Linux,freshly installed
141118,,,None,Desktop,tcp,22,Target Credential Status by Authentication Protocol - Valid Credentials Provided,Valid credentials were provided for an available authentication protocol.,"Nessus was able to determine that valid credentials were provided for
an authentication protocol available on the remote target because it
was able to successfully authenticate directly to the remote target
using that authentication protocol at least once. Authentication was
successful because the authentication protocol service was available
remotely, the service was able to be identified, the authentication
protocol was able to be negotiated successfully, and a set of
credentials provided in the scan policy for that authentication
protocol was accepted by the remote service. See plugin output for
details, including protocol, port, and account.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.",n/a,,"
Nessus was able to log in to the remote host via the following :

User:       'user'
Port:       22
Proto:      SSH
Method:     password
Escalation: sudo
",,Kali Linux,freshly installed
149334,,,None,Desktop,tcp,22,SSH Password Authentication Accepted,The SSH server on the remote host accepts password authentication.,The SSH server on the remote host accepts password authentication.,n/a,https://tools.ietf.org/html/rfc4252#section-8,,,Kali Linux,freshly installed
153588,,,None,Desktop,tcp,22,SSH SHA-1 HMAC Algorithms Enabled,The remote SSH server is configured to enable SHA-1 HMAC algorithms.,"The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.",n/a,,"
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
",,Kali Linux,freshly installed
181418,,,None,Desktop,tcp,22,OpenSSH Detection,An OpenSSH-based SSH server was detected on the remote host.,An OpenSSH-based SSH server was detected on the remote host.,n/a,https://www.openssh.com/,"
  Service : ssh
  Version : 9.4p1
  Banner  : SSH-2.0-OpenSSH_9.4p1 Debian-1
",,Kali Linux,freshly installed
187201,CVE-2023-48795,6.4,Medium,Desktop,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187201,CVE-2023-51384,6.4,Medium,Desktop,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187201,CVE-2023-51385,6.4,Medium,Desktop,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187315,CVE-2023-48795,5.4,Medium,Desktop,tcp,22,SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795),The remote SSH server is vulnerable to a mitm prefix truncation attack.,"The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.",Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.,https://terrapin-attack.com/,"Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
",5.9,Kali Linux,freshly installed
10114,CVE-1999-0524,0,None,Server,icmp,0,ICMP Timestamp Request Remote Date Disclosure,It is possible to determine the exact time set on the remote host.,"The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).",,"The difference between the local and remote clocks is -1 seconds.
",0,Kali Linux,freshly installed
10267,,,None,Server,tcp,22,SSH Server Type and Version Information,An SSH server is listening on this port.,"It is possible to obtain information about the remote SSH server by
sending an empty authentication request.",n/a,,"
SSH version : SSH-2.0-OpenSSH_9.4p1 Debian-1
SSH supported authentication : publickey,password
",,Kali Linux,freshly installed
10287,,,None,Server,udp,0,Traceroute Information,It was possible to obtain traceroute information.,Makes a traceroute to the remote host.,n/a,,"For your information, here is the traceroute from 10.0.1.11 to 10.0.1.23 : 
10.0.1.11
10.0.1.23

Hop Count: 1
",,Kali Linux,freshly installed
10881,,,None,Server,tcp,22,SSH Protocol Versions Supported,A SSH server is running on the remote host.,"This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.",n/a,,"The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
",,Kali Linux,freshly installed
11219,,,None,Server,tcp,22,Nessus SYN scanner,It is possible to determine which TCP ports are open.,"This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.",Protect your target with an IP filter.,,Port 22/tcp was found to be open,,Kali Linux,freshly installed
11936,,,None,Server,tcp,0,OS Identification,It is possible to guess the remote operating system.,"Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.",n/a,,"
Remote operating system : Linux Kernel 6.5.0-kali3-amd64
Confidence level : 99
Method : uname

 
The remote host is running Linux Kernel 6.5.0-kali3-amd64",,Kali Linux,freshly installed
19506,,,None,Server,tcp,0,Nessus Scan Information,This plugin displays information about the Nessus scan.,"This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.",n/a,,"Information about this scan : 

Nessus version : 10.7.1
Nessus build : 20016
Plugin feed version : 202404071510
Scanner edition used : Nessus Home
Scanner OS : LINUX
Scanner distribution : ubuntu1404-x86-64
Scan type : Normal
Scan name : Kali Linux (pre-scan)
Scan policy used : Basic Network Scan
Scanner IP : 10.0.1.11
Port scanner(s) : nessus_syn_scanner 
Port range : default
Ping RTT : 133.452 ms
Thorough tests : no
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : no
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : disabled
Web application tests : disabled
Max hosts : 30
Max checks : 4
Recv timeout : 5
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/4/8 23:35 EDT
Scan duration : 436 sec
Scan for malware : no
",,Kali Linux,freshly installed
21745,,,None,Server,tcp,0,OS Security Patch Assessment Failed,Errors prevented OS Security Patch Assessment.,"OS Security Patch Assessment is not available for this host because
either the credentials supplied in the scan policy did not allow
Nessus to log into it or some other problem occurred.",Fix the problem(s) so that OS Security Patch Assessment is possible.,,"
The following service errors were logged :

  - Plugin      : ssh_get_info.nasl
    Plugin ID   : 12634
    Plugin Name : Authenticated Check : OS Name and Installed Package Enumeration
    Protocol    : SSH
    Message     : 
Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.
",,Kali Linux,freshly installed
22964,,,None,Server,tcp,22,Service Detection,The remote service could be identified.,"Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.",n/a,,An SSH server is running on this port.,,Kali Linux,freshly installed
25220,,,None,Server,tcp,0,TCP/IP Timestamps Supported,The remote service implements TCP timestamps.,"The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.",n/a,http://www.ietf.org/rfc/rfc1323.txt,,,Kali Linux,freshly installed
35716,,,None,Server,tcp,0,Ethernet Card Manufacturer Detection,The manufacturer can be identified from the Ethernet OUI.,"Each ethernet MAC address starts with a 24-bit Organizationally 
Unique Identifier (OUI). These OUIs are registered by IEEE.",n/a,"https://standards.ieee.org/faqs/regauth.html
http://www.nessus.org/u?794673b4","
The following card manufacturers were identified :

44:A8:42:46:92:90 : Dell Inc.
",,Kali Linux,freshly installed
45590,,,None,Server,tcp,0,Common Platform Enumeration (CPE),"It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.",n/a,"http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:openbsd:openssh:9.4 -> OpenBSD OpenSSH
  cpe:/a:openbsd:openssh:9.4p1 -> OpenBSD OpenSSH
",,Kali Linux,freshly installed
54615,,,None,Server,tcp,0,Device Type,It is possible to guess the remote device type.,"Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).",n/a,,"Remote device type : general-purpose
Confidence level : 99
",,Kali Linux,freshly installed
66334,,,None,Server,tcp,0,Patch Report,The remote host is missing several patches.,"The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.",Install the patches listed below.,,"

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


",,Kali Linux,freshly installed
70657,,,None,Server,tcp,22,SSH Algorithms and Languages Supported,An SSH server is listening on this port.,"This script detects which algorithms and languages are supported by
the remote service for encrypting communications.",n/a,,"
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  curve25519-sha256
  curve25519-sha256@libssh.org
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group14-sha256
  diffie-hellman-group16-sha512
  diffie-hellman-group18-sha512
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521
  sntrup761x25519-sha512@openssh.com

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
",,Kali Linux,freshly installed
86420,,,None,Server,tcp,0,Ethernet MAC Addresses,"This plugin gathers MAC addresses from various sources and
consolidates them into a list.","This plugin gathers MAC addresses discovered from both remote probing
of the host (e.g. SNMP and Netbios) and from running local checks
(e.g. ifconfig). It then consolidates the MAC addresses into a single,
unique, and uniform list.",n/a,,"The following is a consolidated list of detected MAC addresses:
  - 44:A8:42:46:92:90
",,Kali Linux,freshly installed
97993,,,None,Server,tcp,0,OS Identification and Installed Software Enumeration over SSH v2 (Using New SSH Library),"Information about the remote host can be disclosed via an
authenticated session.","Nessus was able to login to the remote host using SSH or local
commands and extract the list of installed packages.",n/a,,"
It was possible to log into the remote host via SSH using 'password' authentication.

The output of ""uname -a"" is :
Linux kali 6.5.0-kali3-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.5.6-1kali1 (2023-10-09) x86_64 GNU/Linux

Local checks have been enabled for this host.
We are able to run commands on the remote host, but are unable to
currently identify it in this plugin.

Runtime : 15.342255 seconds
",,Kali Linux,freshly installed
117885,,,None,Server,tcp,22,Target Credential Issues by Authentication Protocol - Intermittent Authentication Failure,"Nessus was able to log in to the remote host using the provided
credentials, but there were intermittent authentication failures.","Nessus was able to successfully authenticate to the remote host on an
authentication protocol at least once using credentials provided in
the scan policy.

However, one or more plugins failed to authenticate to the remote host
on the same port and protocol using the same credential set that was
previously successful. This may indicate an intermittent
authentication problem with the remote host, which could be caused by
session rate limits, session concurrency limits, or other issues
preventing consistent authentication success.

These intermittent authentication failures may have affected the
results of some plugins. See plugin output for failure details.",n/a,,"
Nessus was able to successfully log into the remote host as :

User:       'user'
Port:       22
Proto:      SSH
Method:     password
Escalation: sudo


Successful authentication was reported by the following plugin :

  Plugin      : ssh_rate_limiting.nasl
  Plugin ID   : 122501
  Plugin Name : SSH Rate Limited Device

However, one or more subsequent plugins failed to authenticate to the
remote host on the same port and protocol using the same credential
set that previously succeeded. This may indicate an intermittent
authentication problem with the remote host which may have affected
the results of the following plugins.

Error message statistics :

  1 Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.


Failure Details :

  - Plugin      : ssh_get_info.nasl
    Plugin ID   : 12634
    Plugin Name : Authenticated Check : OS Name and Installed Package Enumeration
    Message     : 
Remote SSH server does not support ssh-rsa or ssh-dss server host key algorithms.
",,Kali Linux,freshly installed
117886,,,None,Server,tcp,0,OS Security Patch Assessment Not Available,OS Security Patch Assessment is not available.,"OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.",n/a,,"
The following issues were reported :

  - Plugin      : ssh_get_info2.nasl
    Plugin ID   : 97993
    Plugin Name : OS Identification and Installed Software Enumeration over SSH v2 (Using New SSH Library)
    Protocol    : SSH
    Message     : 
We are able to run commands on the remote host, but are unable to
currently identify it in this plugin.
",,Kali Linux,freshly installed
141118,,,None,Server,tcp,22,Target Credential Status by Authentication Protocol - Valid Credentials Provided,Valid credentials were provided for an available authentication protocol.,"Nessus was able to determine that valid credentials were provided for
an authentication protocol available on the remote target because it
was able to successfully authenticate directly to the remote target
using that authentication protocol at least once. Authentication was
successful because the authentication protocol service was available
remotely, the service was able to be identified, the authentication
protocol was able to be negotiated successfully, and a set of
credentials provided in the scan policy for that authentication
protocol was accepted by the remote service. See plugin output for
details, including protocol, port, and account.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.",n/a,,"
Nessus was able to log in to the remote host via the following :

User:       'user'
Port:       22
Proto:      SSH
Method:     password
Escalation: sudo
",,Kali Linux,freshly installed
149334,,,None,Server,tcp,22,SSH Password Authentication Accepted,The SSH server on the remote host accepts password authentication.,The SSH server on the remote host accepts password authentication.,n/a,https://tools.ietf.org/html/rfc4252#section-8,,,Kali Linux,freshly installed
153588,,,None,Server,tcp,22,SSH SHA-1 HMAC Algorithms Enabled,The remote SSH server is configured to enable SHA-1 HMAC algorithms.,"The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.",n/a,,"
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
",,Kali Linux,freshly installed
181418,,,None,Server,tcp,22,OpenSSH Detection,An OpenSSH-based SSH server was detected on the remote host.,An OpenSSH-based SSH server was detected on the remote host.,n/a,https://www.openssh.com/,"
  Service : ssh
  Version : 9.4p1
  Banner  : SSH-2.0-OpenSSH_9.4p1 Debian-1
",,Kali Linux,freshly installed
187201,CVE-2023-48795,6.4,Medium,Server,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187201,CVE-2023-51384,6.4,Medium,Server,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187201,CVE-2023-51385,6.4,Medium,Server,tcp,22,OpenSSH < 9.6 Multiple Vulnerabilities,The SSH server running on the remote host is affected by multiple vulnerabilities.,"The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.",Upgrade to OpenSSH version 9.6 or later.,https://www.openssh.com/txt/release-9.6,"
  Version source    : SSH-2.0-OpenSSH_9.4p1 Debian-1
  Installed version : 9.4p1
  Fixed version     : 9.6p1 / 9.6
",6.5,Kali Linux,freshly installed
187315,CVE-2023-48795,5.4,Medium,Server,tcp,22,SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795),The remote SSH server is vulnerable to a mitm prefix truncation attack.,"The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.",Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.,https://terrapin-attack.com/,"Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
",5.9,Kali Linux,freshly installed
